<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Hugo on machortz blog </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://machortz.github.io/tags/hugo/index.xml/</link>
    <language>ja-JP</language>
    <author>machortz</author>
    
    <updated>Mon, 29 Dec 2014 01:16:54 JST</updated>
    
    <item>
      <title>Hugoを使ってみたときのメモ</title>
      <link>http://machortz.github.io/posts/usinghugo/</link>
      <pubDate>Mon, 29 Dec 2014 01:16:54 JST</pubDate>
      <author>machortz</author>
      <guid>http://machortz.github.io/posts/usinghugo/</guid>
      <description>

&lt;p&gt;こちらのエントリを拝見し、Hugoをつかってみたときのメモ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://deeeet.com/writing/2014/12/25/hugo/&#34;&gt;http://deeeet.com/writing/2014/12/25/hugo/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Hugoとは&lt;/h1&gt;

&lt;p&gt;Goで書かれた静的サイトジェネレータ。&lt;/p&gt;

&lt;p&gt;当然github pagesでもbitbucketでのデプロイも可能。&lt;/p&gt;

&lt;p&gt;バイナリでも配布されているので、使うだけなら特にGo言語がどうとか気にしなくて良い。&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;使い方とか&lt;/h1&gt;

&lt;p&gt;公式サイトが簡潔にまとまっていて1時間もあればサイトを構築できる。&lt;/p&gt;

&lt;p&gt;以下にすべて書いてあるので丸投げ( ･∀･)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/overview/introduction&#34;&gt;http://gohugo.io/overview/introduction&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;toc_2&#34;&gt;個人的なメモ&lt;/h1&gt;

&lt;p&gt;ソースはbitbucketで管理し、github pagesで公開する&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;サイト生成&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site /path/to/site
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;新しいエントリ生成&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new posts/first.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;ローカルで確認&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --theme=redlounge --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;localhost:1313で確認。&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;bitbucketにソースをプッシュ&lt;/h2&gt;

&lt;p&gt;生成されたpublic/を一旦削除。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bitbucketのリポジトリ登録とプッシュ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git init
$ git remote add origin https://machortz@bitbucket.org/machortz/&amp;lt;予め用意しておいたリポジトリ&amp;gt;.git
$ git add -A
$ git commit -m &amp;quot;initial commit&amp;quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;github pagesで公開&lt;/h2&gt;

&lt;p&gt;github pages用のリポジトリに作ったpublic/をサブモジュールとしてカレントディレクトリに追加する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git submodule add https://github.com/machortz/machortz.github.io.git public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;改めてhugoでサイトを生成する。このときにサブモジュールpublicのなかにindex.htmlとかが生成される。
draft = trueを削除することも忘れずに。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo -t redlounge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成されたサイト（publicディレクトリの中身）をgithubにプッシュしてサイトを公開する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd public/
$ git add -A
$ git commit -m &amp;quot;something&amp;quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで数分まてばgithub pagesで確認できる。&lt;/p&gt;

&lt;p&gt;サブモジュール追加したあとのサイト生成から、github pagesへのプッシュまでのシェルスクリプトは、
&lt;a href=&#34;http://gohugo.io/tutorials/github_pages_blog/&#34;&gt;http://gohugo.io/tutorials/github_pages_blog/&lt;/a&gt; にある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project. 
hugo # if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`

# Go To Public folder
cd public
# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
  fi
  git commit -m &amp;quot;$msg&amp;quot;

  # Push source and build repos.
  git push origin master

  # Come Back
  cd ..
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>